server:
  port: 8082


spring:
  application:
    name: rise-voice-conversion-service

  # Redis配置
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      database: 1
      # 读超时
      timeout: 3000
      # 连接超时
      connectTimeout: 5000
      # Lettuce连接池
      lettuce:
        pool:
          # 最小空闲连接
          min-idle: 5
          # 最大空闲连接
          max-idle: 10
          # 最大连接数
          max-active: 100
          # 连接分配应该阻塞的最大时间
          max-wait: 2000

  # -------------- rabbitmq 配置
  rabbitmq:
    host: ${RABBIT_MQ_HOST} # rabbitmq 的 ip 地址
    port: 5672 # 端口
    username: ${RABBIT_MQ_USERNAME} # 账号
    password: ${RABBIT_MQ_PASSWORD} # 密码
    virtualHost: my_vhost # 连接到RabbitMQ服务上的虚拟主机
    # 生产者消息确认机制
    publisher-confirm-type: correlated # 设置生产者消息确认模式为相关确认模式
    publisher-returns: true # 开启消息退回机制
    template:
      mandatory: true # 标记生产者消息为强制性的，确保消息始终被处理
    # 消息接收设置
    listener:
      simple:
        prefetch: 1 # 消息预取限制，控制预取消息的上限，处理完才可以继续获取
        # 消费者消息确认机制
        acknowledge-mode: auto # 自动 ack，由 spring 检测 listener 代码是否出现异常，没有异常则返回 ack；抛出异常则返回 nack
        # 配置 retry ,消费者失败重试
        retry:
          enabled: true # 开启消费者失败重试
          initial-interval: 1000 # 初识的失败等待时长
          multiplier: 1 # 下次失败的等待时长倍数，下次等待时长 = multiplier * initial-interval
          max-attempts: 3 # 最大重试次数
          stateless: true # true：无状态;false 有状态。如果业务中包含事务，这里改为 false


rise:
  conversation:
    voice:
      azure:
        enabled: true
        api-key: ${AZURE_API_KEY}
        access-token-uri: ${AZURE_ACCESS_TOKEN_URI}
        locale: ${AZURE_LOCALE}
        gender: ${AZURE_GENDER}
        service-uri: ${AZURE_SERVICE_URI}
        voice-name: ${AZURE_VOICE_NAME}
        audio-type: ${AZURE_AUDIO_TYPE}

  storage:
    ali:
      enabled: true
      access-key-id: ${ALI_ACCESS_KEY_ID}
      access-key-secret: ${ALI_ACCESS_KEY_SECRET}
      endpoint: https://oss-cn-beijing.aliyuncs.com
      bucket-name: ${ALI_BUCKET_NAME}

  context:
    interceptor:
      enabled: true
